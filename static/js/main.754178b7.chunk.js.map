{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"iSAeeA,MAZf,SAAeC,GACX,OACE,sBAAKC,UAAU,mBAAf,UACE,gJAIA,kE,gFCoCOC,MAvCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,cAAC,IAAD,CAAMC,GAAM,CACVC,SAAQ,iBAAaP,GACrBQ,MAAQ,CACNP,OACAC,QACAC,UACAC,SACAC,WAPJ,SAUA,sBAAKP,UAAU,QAAf,UACE,qBAAKW,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,sBAAKJ,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,oBAAIJ,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,SACGO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBf,UAAU,gBAA1B,SAA2Cc,GAAlCC,QAGb,oBAAGf,UAAU,iBAAb,UAA+BK,EAAQW,MAAM,EAAE,KAA/C,kBCqCOC,G,kNA5DbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEASAC,IAAMC,IACd,4DAVQ,gBAOEJ,EAPF,EAMRK,KACEA,KAAQL,OAOZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAdzB,2C,kEAsBVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKhB,MAA3BQ,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASnB,UAAU,YAAnB,SACGkB,EAEG,qBAAKlB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAIF,qBAAKA,UAAU,SAAf,SACGmB,EAAON,KAAK,SAAAc,GAAK,OAChB,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAMzB,e,GA7CV2B,IAAMC,YCiBVC,E,kLAnBU,IAAD,EACcL,KAAK3B,MAA3BiC,EADQ,EACRA,SAAUC,EADF,EACEA,aAEIC,IAAnBF,EAAStB,OACRuB,EAAQE,KAAK,O,+BAIZ,IACEH,EAAYN,KAAK3B,MAAjBiC,SACP,OAAGA,EAAStB,MACD,+BAAOsB,EAAStB,MAAMN,QAEtB,S,GAdEyB,IAAMC,W,MCWZM,MATf,WACI,OACI,sBAAKpC,UAAY,MAAjB,UACI,cAAC,IAAD,CAAMQ,GAAI,IAAV,kBACA,cAAC,IAAD,CAAMA,GAAI,SAAV,uB,MCeG6B,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWvB,IACxC,cAAC,IAAD,CAAOqB,KAAK,SAASE,UAAW1C,IAChC,cAAC,IAAD,CAAOwC,KAAK,aAAaE,UAAaT,QCd5CU,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.754178b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./About.css\";\n\nfunction About(props) {    \n    return (\n      <div className=\"about__container\">\n        <span>\n          “Freedom is the freedom to say that two plus two make four. If that is\n          granted, all else follows.”\n        </span>\n        <span>− George Orwell, 1984</span>\n      </div>\n    );\n  }\n\nexport default About;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n// state가 필요없는 경우에는 class 대신 function을 쓰면 됨\n// movie를 render 하기 위한 파일\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <Link to = {{\n      pathname : `/movie/${id}`,\n      state : {\n        year,\n        title,\n        summary,\n        poster,\n        genres\n      }\n    }}>\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>        \n        <ul className=\"movie__genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres__genre\">{genre}</li>\n          ))}\n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\n      </div>\n    </div>\n    </Link>\n  );\n}\n\n// proptypes 설정\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true, // 로딩 환경\n    movies: [],\n  };\n\n  getMovies = async () => {\n    // data load. fetch 대신 axios 사용\n    // axios 속도가 그리 빠른편이 아니므로 didmount가 끝날때까지 시간이 걸린다라는 명시를 해줘야함.\n    // 즉 비동기 처리. axios가 끝날때 까지 기다렸다가 계속함\n    // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\"); bad\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    ); // es6\n\n    //this.setState({movies : movies}); // bad\n    this.setState({ movies, isLoading: false }); // es6\n  };\n\n  // component 완료 후 작업. 대표적으로 fetch data가 필요함\n  componentDidMount() {\n    //setTimeout(() => {\n    //  this.setState({ isLoading : false})\n    //}, 6000);\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state; // es6\n    return (\n      <section className=\"container\">\n        {isLoading\n          ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          )\n          : (\n            <div className=\"movies\">\n              {movies.map( movie =>\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />              \n              )}\n            </div>\n          )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass Detail extends React.Component{\n    componentDidMount() {        \n        const { location, history } = this.props;\n        // redirect\n        if(location.state === undefined){\n            history.push(\"/\");\n        }\n    };\n\n    render(){\n        const {location} = this.props;\n        if(location.state){\n            return <span>{location.state.title}</span>;\n        }else{\n            return null;\n        }\n        \n    }\n}\n\nexport default Detail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation(){\n    return (\n        <div className = \"nav\">\n            <Link to =\"/\">Home</Link>\n            <Link to =\"/about\">About</Link>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\n/* exact 옵션을 넣어서 해당 path가 아니면 렌더링을 안하도록 설정 */\n/* Router 밖에선 Navigation이 동작하지 않음. 꼭 안에서 써야함. */\n/* HashRouter가 아닌 BrowserRouter를 쓰는 경우 url창에 #가 안생김 */\n/* 단, git hub pages에 업로드 하기 위해선 hash가 더 쉬움 */\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home} />  \n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component = {Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}